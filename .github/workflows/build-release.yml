name: Build & Release

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    # ✅ C# 빌드 - static void Main 있는 파일만 dotnet으로 컴파일
    - name: Set up .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'

    - name: Build C# files (only those with Main method)
      run: |
        mkdir -p build/csharp
        for file in csharp/*.cs; do
          if grep -q 'static void Main' "$file"; then
            filename=$(basename "$file" .cs)
            dotnet new console -o "temp_$filename" --force
            mv "$file" "temp_$filename/Program.cs"
            cd "temp_$filename"
            dotnet build -c Release -o "../build/csharp/$filename"
            cd ..
            rm -rf "temp_$filename"
          else
            echo "Skipping $file (no Main method found)"
          fi
        done

    # ✅ C++ 빌드
    - name: Build C++ files
      run: |
        sudo apt-get update && sudo apt-get install -y g++
        mkdir -p build/cpp
        for file in cpp/*.cpp; do
          g++ "$file" -o "build/cpp/$(basename "$file" .cpp)"
        done

    # ✅ Kotlin 설치
    - name: Set up Java for Kotlin
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '17'

    - name: Install Kotlin compiler
      run: |
        curl -s https://get.sdkman.io | bash
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        sdk install kotlin
        echo 'export PATH=$PATH:$HOME/.sdkman/candidates/kotlin/current/bin' >> $GITHUB_ENV

    - name: Build Kotlin files
      run: |
        source "$HOME/.sdkman/bin/sdkman-init.sh"
        mkdir -p build/kotlin
        for file in kotlin/*.kt; do
          kotlinc "$file" -include-runtime -d "build/kotlin/$(basename "$file" .kt).jar"
        done

    # ✅ 압축
    - name: Zip build results
      run: |
        zip -r build_outputs.zip build/

    # ✅ 릴리즈 생성
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: "Release ${{ github.run_number }}"
        tag_name: "v${{ github.run_number }}"
        files: build_outputs.zip
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
